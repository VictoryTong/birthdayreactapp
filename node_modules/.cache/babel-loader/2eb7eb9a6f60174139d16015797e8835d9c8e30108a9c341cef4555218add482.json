{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tongbrav\\\\Documents\\\\Personal\\\\React\\\\07-happy-birthday\\\\src\\\\typedcomponent.js\",\n  _s = $RefreshSig$();\nimport Typed from \"typed.js\";\nimport { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TypedComponent = () => {\n  _s();\n  const typedElement = useRef(null);\n  useEffect(() => {\n    const options = {\n      strings: [\"Happy Birthday Parth\", \"Have a wonderful day\", \"Filled with joy and happiness.\"],\n      // The strings you want to type\n      typeSpeed: 50,\n      backSpeed: 50,\n      loop: true\n    };\n    const typed = new Typed(typedElement.current, options);\n    return () => {\n      typed.destroy();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      ref: typedElement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(TypedComponent, \"iWCiyiOC0dP1DoyWh0O0wwCUmco=\");\n_c = TypedComponent;\nvar _c;\n$RefreshReg$(_c, \"TypedComponent\");","map":{"version":3,"names":["Typed","useEffect","useRef","jsxDEV","_jsxDEV","TypedComponent","_s","typedElement","options","strings","typeSpeed","backSpeed","loop","typed","current","destroy","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/tongbrav/Documents/Personal/React/07-happy-birthday/src/typedcomponent.js"],"sourcesContent":["import Typed from \"typed.js\";\r\nimport { useEffect, useRef } from \"react\";\r\n\r\nexport const TypedComponent = () => {\r\n  const typedElement = useRef(null);\r\n  useEffect(() => {\r\n    const options = {\r\n      strings: [\r\n        \"Happy Birthday Parth\",\r\n        \"Have a wonderful day\",\r\n        \"Filled with joy and happiness.\",\r\n      ], // The strings you want to type\r\n      typeSpeed: 50,\r\n      backSpeed: 50,\r\n      loop: true,\r\n    };\r\n    const typed = new Typed(typedElement.current, options);\r\n    return () => {\r\n      typed.destroy();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <span ref={typedElement}></span>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,UAAU;AAC5B,SAASC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAMC,YAAY,GAAGL,MAAM,CAAC,IAAI,CAAC;EACjCD,SAAS,CAAC,MAAM;IACd,MAAMO,OAAO,GAAG;MACdC,OAAO,EAAE,CACP,sBAAsB,EACtB,sBAAsB,EACtB,gCAAgC,CACjC;MAAE;MACHC,SAAS,EAAE,EAAE;MACbC,SAAS,EAAE,EAAE;MACbC,IAAI,EAAE;IACR,CAAC;IACD,MAAMC,KAAK,GAAG,IAAIb,KAAK,CAACO,YAAY,CAACO,OAAO,EAAEN,OAAO,CAAC;IACtD,OAAO,MAAM;MACXK,KAAK,CAACE,OAAO,CAAC,CAAC;IACjB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAAY,QAAA,eACEZ,OAAA;MAAMa,GAAG,EAAEV;IAAa;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEV,CAAC;AAACf,EAAA,CAxBWD,cAAc;AAAAiB,EAAA,GAAdjB,cAAc;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}