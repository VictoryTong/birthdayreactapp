{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tongbrav\\\\Documents\\\\Personal\\\\React\\\\07-happy-birthday\\\\src\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport Typed from \"typed.js\";\nimport \"./bootstrap.min.css\";\nimport \"./style.css\";\nimport App from \"./App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 3\n}, this));\nconst TypedComponent = () => {\n  _s();\n  const typedElement = useRef(null);\n  useEffect(() => {\n    const options = {\n      strings: [\"Happy Birthday Parth\", \"Have a wonderful day\", \"Filled with joy and happiness.\"],\n      // The strings you want to type\n      typeSpeed: 50,\n      backSpeed: 50,\n      loop: true\n    };\n  });\n};\n_s(TypedComponent, \"iWCiyiOC0dP1DoyWh0O0wwCUmco=\");\n_c = TypedComponent;\nvar _c;\n$RefreshReg$(_c, \"TypedComponent\");","map":{"version":3,"names":["React","useEffect","useRef","ReactDOM","Typed","App","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","TypedComponent","_s","typedElement","options","strings","typeSpeed","backSpeed","loop","_c","$RefreshReg$"],"sources":["C:/Users/tongbrav/Documents/Personal/React/07-happy-birthday/src/index.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport Typed from \"typed.js\";\nimport \"./bootstrap.min.css\";\nimport \"./style.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\nconst TypedComponent = () => {\n  const typedElement = useRef(null);\n  useEffect(() => {\n    const options = {\n      strings: [\n        \"Happy Birthday Parth\",\n        \"Have a wonderful day\",\n        \"Filled with joy and happiness.\",\n      ], // The strings you want to type\n      typeSpeed: 50,\n      backSpeed: 50,\n      loop: true,\n    };\n  });\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,KAAK,MAAM,UAAU;AAC5B,OAAO,qBAAqB;AAC5B,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,IAAI,GAAGL,QAAQ,CAACM,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACTL,OAAA,CAACP,KAAK,CAACa,UAAU;EAAAC,QAAA,eACfP,OAAA,CAACF,GAAG;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACS,CACpB,CAAC;AACD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,YAAY,GAAGnB,MAAM,CAAC,IAAI,CAAC;EACjCD,SAAS,CAAC,MAAM;IACd,MAAMqB,OAAO,GAAG;MACdC,OAAO,EAAE,CACP,sBAAsB,EACtB,sBAAsB,EACtB,gCAAgC,CACjC;MAAE;MACHC,SAAS,EAAE,EAAE;MACbC,SAAS,EAAE,EAAE;MACbC,IAAI,EAAE;IACR,CAAC;EACH,CAAC,CAAC;AACJ,CAAC;AAACN,EAAA,CAdID,cAAc;AAAAQ,EAAA,GAAdR,cAAc;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}